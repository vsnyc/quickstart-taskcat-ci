AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Creates Pipeline and required resources for TaskCat CI. License: Apache
  2.0 (Please do not remove)(qs-1q5ruad8m)'
Resources:
  CopyLambdasStack:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:910000848896:applications/serverless-lambda-copyzips
        SemanticVersion: 0.0.1
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        SourceObjects: "functions/package/lambda.zip"
  SSMStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - CopyLambdasStack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/ssm.template.yaml'
      Parameters:
        GithubToken: !Ref 'GitHubOAuthToken'
        LambdaZipsBucket: !GetAtt 'CopyLambdasStack.Outputs.LambdaZipsBucket'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
  GitMergeLambda:
    Type: AWS::Lambda::Function
    DependsOn:
      - GitMergeRole
      - CopyLambdasStack
      - SSMStack
    Properties:
      Code:
        S3Bucket: !GetAtt 'CopyLambdasStack.Outputs.LambdaZipsBucket'
        S3Key: !Sub '${QSS3KeyPrefix}functions/package/lambda.zip'
      Description: Merge github branches
      FunctionName: Git_Merge
      Handler: !Join
        - .
        - - git_merge
          - lambda_handler
      Role: !GetAtt 'GitMergeRole.Arn'
      Runtime: python3.6
      Timeout: '30'
  GitMergeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: GitMergeRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:logs:'
                      - !Ref 'AWS::Region'
                      - ':'
                      - !Ref 'AWS::AccountId'
                      - :log-group:/aws/lambda/*
              - Effect: Allow
                Action:
                  - codepipeline:GetPipeline
                  - codepipeline:GetPipelineExecution
                  - codepipeline:GetPipelineState
                  - codepipeline:ListPipelines
                  - codepipeline:ListPipelineExecutions
                Resource:
                  - !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:*'
              - Effect: Allow
                Action:
                  - codepipeline:GetJobDetails
                  - codepipeline:PutJobSuccessResult
                  - codepipeline:PutJobFailureResult
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: '*'
              - Effect: Allow
                Action:
                  - ssm:Describe*
                  - ssm:Get*
                  - ssm:List*
                Resource: '*'
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource: !GetAtt 'SSMStack.Outputs.KMSKeyArn'
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionExpirationInDays: 30
            Status: Enabled
      VersioningConfiguration:
        Status: Enabled
  IAMRoleStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - ArtifactBucket
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/iam-roles.template.yaml'
      Parameters:
        ArtifactBucket: !Ref 'ArtifactBucket'
        ConfigBucket: !Ref ConfigBucket
  CodePipelineStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - ArtifactBucket
      - IAMRoleStack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/pipeline-cicd.template.yaml'
      Parameters:
        GitHubUser: !Ref 'GitHubUser'
        GitHubRepoName: !Ref 'GitHubRepoName'
        SourceRepoBranch: !Ref 'SourceRepoBranch'
        ReleaseBranch: !Ref 'ReleaseBranch'
        GitHubOAuthToken: !Ref 'GitHubOAuthToken'
        ArtifactBucket: !Ref 'ArtifactBucket'
        GitMergeLambda: !Ref 'GitMergeLambda'
        CodePipelineRoleArn: !GetAtt 'IAMRoleStack.Outputs.CodePipelineRoleArn'
        CodeBuildRoleArn: !GetAtt 'IAMRoleStack.Outputs.CodeBuildRoleArn'
        CFNRoleArn: !GetAtt 'IAMRoleStack.Outputs.CFNRoleArn'
        Email: !Ref Email
        ProdStackName: !Ref ProdStackName
        ConfigBucket: !Ref ConfigBucket
        CodeHostingBucket: !Ref CodeHostingBucket
        ProdStackConfig: !Ref ProdStackConfig
        TestStackConfig: !Ref TestStackConfig
        TemplateFileName: !Ref TemplateFileName
        KeepTestStack: !Ref KeepTestStack
Parameters:
  Email:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String
  GitHubUser:
    Description: Enter GitHub username of the repository owner
    Type: String
  GitHubRepoName:
    Description: Enter the repository name that should be monitored for changes
    Type: String
  SourceRepoBranch:
    Description: Enter the branch name to be monitored
    Type: String
  ReleaseBranch:
    Description: Enter the release branch name. On successfull build, above branch
      will be merged into this branch.
    Type: String
  GitHubOAuthToken:
    Description: Create a token with 'repo' and 'admin:repo_hook' permissions here
      https://github.com/settings/tokens
    Type: String
    NoEcho: 'true'
  ProdStackName:
    Description: Name of the production stack
    Type: String
  ConfigBucket:
    Type: String
    Description: S3 bucket in the deployment Region where your production and test configurations are stored.
  CodeHostingBucket:
    Type: String
    Description: S3 bucket in US East (N. Virginia) Region where your production Quick Start assets are stored.
  ProdStackConfig:
    Description: The S3 key prefix of the configuration file name for the production stack
    Type: String
  TestStackConfig:
    Description: The S3 key prefix of the configuration file name for the test stack
    Type: String
  KeepTestStack:
    Description: Whether to keep or automatically delete the test stack
    Type: String
    Default: 'False'
    AllowedValues:
      - 'True'
      - 'False'
  TemplateFileName:
    Description: The file name of the main CloudFormation template
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-taskcat-ci/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: GitHub configuration
        Parameters:
          - GitHubUser
          - GitHubOAuthToken
          - GitHubRepoName
          - SourceRepoBranch
          - ReleaseBranch
      - Label:
          default: AWS CodePipeline configuration
        Parameters:
          - Email
          - ConfigBucket
          - CodeHostingBucket
          - ProdStackName
          - ProdStackConfig
          - TemplateFileName
          - TestStackConfig
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      GitHubUser:
        default: Repository owner
      GitHubRepoName:
        default: Repository name
      SourceRepoBranch:
        default: Source branch
      ReleaseBranch:
        default: Release branch
      GitHubOAuthToken:
        default: OAuth2 token
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
Outputs:
  CodePipelineURL:
    Description: The URL of the created Pipeline
    Value: !Sub
      - https://${AWS::Region}.console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${CodePipelineName}
      - CodePipelineName: !GetAtt 'CodePipelineStack.Outputs.CodePipelineName'
  TaskCatReports:
    Description: Path to the TaskCat report. Each report is named as CODEBUILD_BUILD_ID.zip
    Value: !Sub 's3://${ArtifactBucket}/taskcat_reports/'

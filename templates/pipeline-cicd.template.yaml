AWSTemplateFormatVersion: '2010-09-09'
Description: Creates Pipeline for TaskCat CI.
Resources:
  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref 'ArtifactBucket'
      RoleArn: !Ref 'CodePipelineRoleArn'
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: Source
              Configuration:
                Owner: !Ref 'GitHubUser'
                Repo: !Ref 'GitHubRepoName'
                Branch: !Ref 'SourceRepoBranch'
                OAuthToken: !Ref 'GitHubOAuthToken'
              RunOrder: 1
            - Name: S3Config
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              RunOrder: 1
              Configuration:
                PollForSourceChanges: false #Set this to true to poll, else setup CloudWatch notification
                S3Bucket: !Ref ConfigBucket
                S3ObjectKey: !Sub '${GitHubRepoName}.zip'
              OutputArtifacts:
                - Name: S3ConfigOut
              InputArtifacts: []
              Region: !Ref 'AWS::Region'
        - Name: Build
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: Source
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts: []
              Configuration:
                ProjectName: !Ref 'CodeBuild'
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Git-merge
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: '1'
                Provider: Lambda
              Configuration:
                FunctionName: !Ref 'GitMergeLambda'
                UserParameters: !Sub '{ "owner": "${GitHubUser}", "repo": "${GitHubRepoName}",
                  "baseBranch": "${ReleaseBranch}", "headBranch": "${SourceRepoBranch}"
                  }'
              RunOrder: 1
        - Name: S3CodeBuildDeploy
          Actions:
            - Name: S3-CodeBuild-Deploy
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              RunOrder: 1
              Configuration:
                ProjectName: !Ref CodeBuildS3Sync
              OutputArtifacts:
                - Name: S3CodeBuildDeployOut
              InputArtifacts:
                - Name: Source
              Region: !Ref AWS::Region
        - Name: ProdStage
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: S3ConfigOut
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !Ref CFNRoleArn
                StackName: !Ref ProdStackName
                ChangeSetName: !Sub "${ProdStackName}-change-set"
                TemplateConfiguration: !Sub "S3ConfigOut::${ProdStackConfig}"
                TemplatePath: !Sub "S3ConfigOut::${TemplateFileName}"
              RunOrder: '1'
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: !Sub 'A new change set was created for the ${ProdStackName} stack. Do you want to implement the changes?'
              RunOrder: '2'
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub "${ProdStackName}-change-set"
                RoleArn: !Ref CFNRoleArn
                StackName: !Ref ProdStackName
              RunOrder: '3'

  CodeBuildS3Sync:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: !Sub 'Sync contents of ${GitHubRepoName} to S3 bucket for deployment'
      ServiceRole: !Ref 'CodeBuildRoleArn'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: PROJECTNAME
            Value: !Sub '${GitHubRepoName}'
          - Name: GITHUBUSER
            Value: !Sub '${GitHubUser}'
          - Name: GITHUBTOKEN
            Value: !Sub '${GitHubOAuthToken}'
          - Name: RELEASEBRANCH
            Value: !Sub '${ReleaseBranch}'
          - Name: ARTIFACT_BUCKET
            Value: !Ref 'ArtifactBucket'
          - Name: CODE_HOSTING_BUCKET
            Value: !Ref 'CodeHostingBucket'

      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2

          phases:
            install:
              commands:
                - echo Entered the install phase...
                - apt-get update -y
                - sudo apt-get install zip gzip tar -y
                - pip3 install --upgrade pip
                - ln -s /usr/local/bin/pip /usr/bin/pip
            pre_build:
              commands:
                - echo Entered the pre_build phase...
                - echo Current directory is $CODEBUILD_SRC_DIR
                - ls -la
                - export dirname=${PWD##*/}
                - echo Directory name $dirname
                - cd ..
                - mv $dirname $PROJECTNAME
                - ls -la
                - cd $PROJECTNAME
                - git config --global url."https://github.com/".insteadOf "git@github.com:"
                - git init
                - git remote add origin https://$GITHUBTOKEN@github.com/$GITHUBUSER/$PROJECTNAME.git
                - git fetch
                - git checkout -ft origin/$RELEASEBRANCH
                - git submodule init
                - git submodule update --recursive
                - ls -lR
                - cd ..
                - echo Configuring aws cli...
                - aws configure set default.region us-west-2
            build:
              commands:
                - echo Entered the deploy phase...
                - cd $PROJECTNAME
                - rm -rf .git/
                - aws s3 sync . s3://$CODE_HOSTING_BUCKET/$PROJECTNAME/
                - exit $?


  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: !Sub 'Submit build jobs for ${GitHubRepoName} as part of CI/CD
        pipeline'
      ServiceRole: !Ref 'CodeBuildRoleArn'
      TimeoutInMinutes: 60
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: PROJECTNAME
            Value: !Sub '${GitHubRepoName}'
          - Name: GITHUBUSER
            Value: !Sub '${GitHubUser}'
          - Name: GITHUBTOKEN
            Value: !Sub '${GitHubOAuthToken}'
          - Name: SOURCEBRANCH
            Value: !Sub '${SourceRepoBranch}'
          - Name: ARTIFACT_BUCKET
            Value: !Ref 'ArtifactBucket'
          - Name: CONFIG_BUCKET
            Value: !Ref 'ConfigBucket'
          - Name: TEST_OVERRIDE_CONFIG
            Value: !Ref TestStackConfig
          - Name: KEEP_TEST_STACK
            Value: !Ref KeepTestStack
          - Name: DEPLOY_REGION
            Value: !Ref 'AWS::Region'
          - Name: TEST_REGIONS
            Value: !Ref TestStackRegions

      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          env:
            shell: bash
          phases:
            install:
              commands:
                - echo Entered the install phase...
                - apt-get update -y
                - sudo apt-get install zip gzip tar -y
                - pip3 install --upgrade pip
                - pip3 install --upgrade awscli
                - ln -s /usr/local/bin/pip /usr/bin/pip
            pre_build:
              commands:
                - echo Entered the pre_build phase...
                - echo Current directory is $CODEBUILD_SRC_DIR
                - ls -la
                - export dirname=${PWD##*/}
                - echo Directory name $dirname
                - cd ..
                - mv $dirname $PROJECTNAME
                - ls -la
                - cd $PROJECTNAME
                - git config --global url."https://github.com/".insteadOf "git@github.com:"
                - git init
                - git remote add origin https://$GITHUBTOKEN@github.com/$GITHUBUSER/$PROJECTNAME.git
                - git fetch
                - git checkout -ft origin/$SOURCEBRANCH
                - git submodule init
                - git submodule update --recursive
                - ls -lR
                - ls -l .taskcat*
                - echo Installing Taskcat using pip3...
                - pip install taskcat==0.9.23
                - echo Verifying Taskcat installation...
                - taskcat
                - echo Configuring aws cli...
                - aws configure set default.region $DEPLOY_REGION
            build:
              commands:
                - echo Entered the build phase, checking KEEP_TEST_STACK config...
                - echo $KEEP_TEST_STACK
                - aws s3 cp s3://$CONFIG_BUCKET/$TEST_OVERRIDE_CONFIG .
                - ls -l .taskcat*
                - ls -l
                - |
                    if [[ $KEEP_TEST_STACK == 'False' ]]
                    then
                      taskcat test run -l -r $TEST_REGIONS
                    else
                      taskcat test run -l -n -r $TEST_REGIONS
                    fi
                - ls -1 taskcat_outputs
                - ls -1 taskcat_outputs | while read LOG; do cat taskcat_outputs/${LOG}; done
                - echo Zipping and uploading report to $ARTIFACT_BUCKET S3 bucket
                - zip -r taskcat_report.zip taskcat_outputs
                - aws s3 cp taskcat_report.zip s3://$ARTIFACT_BUCKET/taskcat_reports/$CODEBUILD_BUILD_ID.zip
                - |
                  if $(grep -Fq "CREATE_FAILED" taskcat_outputs/index.html)
                  then
                    echo Quickstart FAILED!
                    exit 1
                  else
                    echo Quickstart Passed!
                    exit 0
                  fi
Parameters:
  GitHubUser:
    Description: Enter GitHub username of the repository owner
    Type: String
  GitHubRepoName:
    Description: Enter the repository name that should be monitored for changes
    Type: String
  SourceRepoBranch:
    Description: Enter the branch name to be monitored
    Type: String
  ReleaseBranch:
    Description: Enter the release branch name. On successfull build, above branch
      will be merged into this branch.
    Type: String
  GitHubOAuthToken:
    Description: Create a token with 'repo' and 'admin:repo_hook' permissions here
      https://github.com/settings/tokens
    Type: String
    NoEcho: 'true'
  ArtifactBucket:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Description: S3 bucket name used to store build artifacts.
    Type: String
  GitMergeLambda:
    Description: Name of the GitMerge Lambda function
    Type: String
  CodePipelineRoleArn:
    Description: Code Pipeline service role ARN
    Type: String
  CodeBuildRoleArn:
    Description: Code Build service role ARN
    Type: String
  Email:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String
  CFNRoleArn:
    Description: CloudFormation service role ARN
    Type: String
  CodeHostingBucket:
    Type: String
    Description: S3 bucket in US East (N. Virginia) Region where your production Quick Start assets are stored.
  ConfigBucket:
    Type: String
    Description: S3 bucket where your production and test configurations are stored
  ProdStackName:
    Description: Name of the production stack
    Type: String
  ProdStackConfig:
    Description: The configuration file name for the production stack
    Type: String
  KeepTestStack:
    Description: Whether to keep or automatically delete the test stack
    Type: String
    Default: 'False'
    AllowedValues:
      - 'True'
      - 'False'
  TestStackConfig:
    Description: The configuration file name for the test stack
    Type: String
  TestStackRegions:
    Description: Comma-delimited list of AWS Regions where the deployment should be tested in
    Type: String
    Default: us-east-1
  TemplateFileName:
    Description: The file name of the main CloudFormation template
    Type: String
Outputs:
  CodePipelineName:
    Description: Pipeline  name
    Value: !Ref 'CodePipeline'
